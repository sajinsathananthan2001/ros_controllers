<?xml version="1.0"?>


<robot xmlns:xacro="http://www.ros.org/wiki/xacro" name="robot_name">



    <xacro:macro name="default_inertial" params="mass">
        <inertial>
            <mass value="${mass}" />
            <inertia ixx="1.0" ixy="0.0" ixz="0.0" iyy="1.0" iyz="0.0" izz="1.0" />
        </inertial>
    </xacro:macro>



    <!-- Color materials -->
    <material name="blue">
        <color rgba="0 0 0.8 1"/>
    </material>

    <material name="black">
        <color rgba="0 0 0 1"/>
    </material>

    <material name="white">
        <color rgba="1 1 1 1"/>
    </material>

    
    <link name="base_link">
        <visual name="">
            <origin xyz="0.0 0.0 0.0" rpy="0.0 0.0 0.0"/>
            <geometry>
                <box size="0.1 0.3 0.7"/>
            </geometry>
            <material name="white"/>
        </visual>
        <collision>
            <origin xyz="0.0 0.0 0.0" rpy="0.0 0.0 0.0"/>
            <geometry>
               <box size="0.1 0.3 0.7"/>
            </geometry>
        </collision>
        <xacro:default_inertial mass="10"/>
    </link>

    <link name="hand_link">
        <visual name="">
            <origin xyz="0.0 0.0 -0.2" rpy="0.0 0.0 0.0"/>
            <geometry>
                <box size="0.05 0.05 0.4"/>
            </geometry>
            <material name="blue"/>
        </visual>
        <collision>
            <origin xyz="0.0 0.0 0.0" rpy="0.0 0.0 0.0"/>
            <geometry>
               <box size="0.25 0.25 0.5"/>
            </geometry>
        </collision>
        <xacro:default_inertial mass="5"/>
    </link>

    <joint name="hand_joint" type="revolute">
        <origin xyz="0.0 0.17 0.2" rpy="0.0 0.0 0.0"/>
        <parent link="base_link"/>
        <child link="hand_link"/>
        <axis xyz="0.0 1 0.0"/>
        <limit lower="-1.5" upper="1.5" effort="0.1" velocity="0.1"/>
    </joint>

    <link name="head_link">
        <visual name="">
            <origin xyz="0.0 0.0 0.0" rpy="0.0 0.0 0.0"/>
            <geometry>
                <sphere radius="0.2"/>
            </geometry>
            <material name="black"/>
        </visual>
        <collision>
            <origin xyz="0.0 0.0 0.0" rpy="0.0 0.0 0.0"/>
            <geometry>
                <sphere radius="0.2"/>
            </geometry>
        </collision>
        <xacro:default_inertial mass="10"/>
    </link>

    <link name="nose_link">
        <visual name="">
            <origin xyz="0.0 0.0 0.0" rpy="0.0 0.0 0.0"/>
            <geometry>
                <box size="0.05 0.05 0.05"/>
            </geometry>
            <material name="white"/>
        </visual>
        <collision>
            <origin xyz="0.0 0.0 0.0" rpy="0.0 0.0 0.0"/>
            <geometry>
                <box size="0.05 0.05 0.05"/>
            </geometry>
        </collision>
        <xacro:default_inertial mass="2"/>
    </link>

    <!-- sensor -->
    <sensor name="my_rgb_cam" type="camera" update_rate="20">
        <parent link="nose_link"/>
        <origin xyz="0.0 0.0 0.0" rpy="0.0 0.0 0.0"/>
        <camera>
            <image width="640" height="480" hfov="1.5708" format="RGB8" near="0.01" far="50.0"/>
        </camera>
        <!-- Sensor |camera,ray,imu,magnetometer,gps,force_torque,contact,sonar,rfidtag,rfid| -->
    </sensor>
    

    <joint name="nose_joint" type="fixed">
        <origin xyz="0.13 0.0 0.14" rpy="0.0 0.0 0.0"/>
        <parent link="head_link"/>
        <child link="nose_link"/>
    </joint>

    <joint name="head_joint" type="revolute">
        <origin xyz="0.0 0.0 0.35" rpy="0.0 0.0 0.0"/>
        <parent link="base_link"/>
        <child link="head_link"/>
        <axis xyz="0.0 0.0 1"/>
        <limit lower="-1.5" upper="1.5" effort="0.1" velocity="0.2"/>
    </joint>



  <!-- This block connects the head_swivel joint to an actuator (motor), which informs both
  simulation and visualization of the robot -->
  <transmission name="head_swivel_trans">
    <type>transmission_interface/SimpleTransmission</type>
    <actuator name="$head_swivel_motor">
      <mechanicalReduction>1</mechanicalReduction>
    </actuator>
    <joint name="head_joint">
      <hardwareInterface>hardware_interface/PositionJointInterface</hardwareInterface>
    </joint>
  </transmission>

    <!-- This block connects the head_swivel joint to an actuator (motor), which informs both
  simulation and visualization of the robot -->
  <transmission name="hand_swivel_trans">
    <type>transmission_interface/SimpleTransmission</type>
    <actuator name="$hand_swivel_motor">
      <mechanicalReduction>1</mechanicalReduction>
    </actuator>
    <joint name="hand_joint">
      <hardwareInterface>hardware_interface/PositionJointInterface</hardwareInterface>
    </joint>
  </transmission>

    <!-- Gazebo plugin for ROS Control -->
    <gazebo>
        <plugin name="gazebo_ros_control" filename="libgazebo_ros_control.so">
            <robotNamespace>/</robotNamespace>
        </plugin>
    </gazebo>

      <!-- camera -->
  <gazebo reference="nose_link">
    <sensor type="camera" name="camera1">
      <update_rate>30.0</update_rate>
      <camera name="head">
        <horizontal_fov>1.3962634</horizontal_fov>
        <image>
          <width>800</width>
          <height>800</height>
          <format>R8G8B8</format>
        </image>
        <clip>
          <near>0.02</near>
          <far>300</far>
        </clip>
        <noise>
          <type>gaussian</type>
          <!-- Noise is sampled independently per pixel on each frame.
               That pixel's noise value is added to each of its color
               channels, which at that point lie in the range [0,1]. -->
          <mean>0.0</mean>
          <stddev>0.007</stddev>
        </noise>
      </camera>
      <plugin name="camera_controller" filename="libgazebo_ros_camera.so">
        <alwaysOn>true</alwaysOn>
        <updateRate>0.0</updateRate>
        <cameraName>rrbot/camera1</cameraName>
        <imageTopicName>image_raw</imageTopicName>
        <cameraInfoTopicName>camera_info</cameraInfoTopicName>
        <frameName>camera_link</frameName>
        <hackBaseline>0.07</hackBaseline>
        <distortionK1>0.0</distortionK1>
        <distortionK2>0.0</distortionK2>
        <distortionK3>0.0</distortionK3>
        <distortionT1>0.0</distortionT1>
        <distortionT2>0.0</distortionT2>
      </plugin>
    </sensor>
  </gazebo>

</robot>
